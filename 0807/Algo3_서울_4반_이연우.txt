1.  이진탐색이란 배열 안에서 특정한 값을 찾고자 할 때 사용할 수 있는 방식 중 하나이다.
    배열의 중간 값과 찾으려는 값을 비교해 중간 값이 큰 경우에는 중간 값보다 인덱스가 작은 부분에서,
    중간 값이 작은 경우에는 중간 값보다 인덱스가 큰 부분에서 탐색을 다시 시작한다.
    각각의 부분에서 새로운 중간 값을 찾아 탐색이 진행된다.
    중간 값과 찾으려는 값이 같다면 탐색은 중단된다.

2.  def binarysearch(a, N, key):
        start = 0
        end = N-1
        while start <= end:  		# start가 end보다 커지면 종료
            mid = (start + end) // 2  	# 중간 값은 start와 end의 평균(홀수라면 소수점 버림)
            if a[mid] == key:  		# key를 찾은 경우
                return True  		# 검색 성공
            elif a[mid] > key:  		# 중간 값이 key보다 큰 경우
                end = mid - 1  		# 중간 값 이전의 인덱스로 end를 변경
            else:  			# 중간 값이 key보다 작은 경우
                start = mid + 1  	# 중간 값 이후의 인덱스로 start를 변경
        return False  		# 검색 실패